
#Использовать ibcmdrunner
#Использовать v8find

#Область ОписаниеПеременных

Перем Лог; // Содердит объект ллога
Перем ВременныйКаталогДанныхСервера; // Временный каталог данных автономного сервера
Перем УправлениеИБ; // :УправлениеИБ
Перем Локаль; // Локаль приложения

#КонецОбласти

#Область ПрограммныйИнтерфейс

Процедура УстановитьКонтекст(Знач СтрокаСоединения, Знач Пользователь, Знач Пароль) Экспорт
	
	КаталогБазы = ОбщиеМетоды.УбратьКавычкиВокругПути(Сред(СтрокаСоединения, 3, СтрДлина(СтрокаСоединения) - 2));
	УправлениеИБ.УстановитьПараметрыФайловойИБ(КаталогБазы);
	УправлениеИБ.УстановитьПараметрыАвторизацииИБ(Пользователь, Пароль);

КонецПроцедуры

Процедура СоздатьФайловуюБазу(Знач КаталогБазы, Знач ПутьКШаблону = "", Знач ИмяБазыВСписке = "") Экспорт

	УправлениеИБ.УстановитьПараметрыФайловойИБ(КаталогБазы);
	УправлениеИБ.СоздатьИБИзФайлаКонфигурации(ПутьКШаблону, Локаль);

КонецПроцедуры

Процедура СобратьИзИсходниковТекущуюКонфигурацию(Знач ВходнойКаталог,
	Знач СписокФайловДляЗагрузки = "", СниматьСПоддержки = Ложь) Экспорт

	ИмяРасширения = "";
	УправлениеИБ.ЗагрузитьКонфигурациюИзФайлов(ВходнойКаталог, ИмяРасширения);

	Если СниматьСПоддержки Тогда
		УправлениеИБ.СнятьСПоддержки();
	КонецЕсли;

КонецПроцедуры

Процедура ОбновитьКонфигурациюБазыДанных(ДинамическоеОбновление = Ложь) Экспорт

	Если ДинамическоеОбновление Тогда
		РежимДинамическогоОбновления = "disable";
	Иначе
		РежимДинамическогоОбновления = "auto";
	КонецЕсли;
	ЗавершатьСеансы = "force";

	ИмяРасширения = "";
	УправлениеИБ.ОбновитьКонфигурациюБазыДанных(ИмяРасширения, РежимДинамическогоОбновления, ЗавершатьСеансы);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

Процедура Конструктор() Экспорт

КонецПроцедуры

Процедура Деструктор() Экспорт
	
	Попытка
		ВременныеФайлы.УдалитьФайл(ВременныйКаталогДанныхСервера);
	Исключение
		Лог.Отладка(ОписаниеОшибки());
	КонецПопытки;

	ВременныйКаталогДанныхСервера = "";

КонецПроцедуры

Процедура Инициализация(Знач ПараметрыКоманды, Знач СтрокаПодключения, Знач Пользователь = "", Знач Пароль = "",
						Знач ВерсияПлатформы = "", Знач КлючРазрешенияЗапуска = "",
						Знач КодЯзыка = "", Знач КодЯзыкаСеанса = "") Экспорт

	ТекущаяПроцедура = "Инициализация";
	ИспользоватьВременнуюБазу = Ложь;
	Лог.Отладка("Заданы ПараметрыКоманды %1", ЗначениеЗаполнено(ПараметрыКоманды));
	
	Если ЗначениеЗаполнено(ПараметрыКоманды) Тогда
		ИспользоватьВременнуюБазу = ПараметрыКоманды["ДанныеПодключения"].ИспользоватьВременнуюБазу;
		Лог.Отладка("ИспользоватьВременнуюБазу %1", ИспользоватьВременнуюБазу);
	КонецЕсли;
	
	Если Не ИспользоватьВременнуюБазу Тогда
		Ожидаем.Что(СтрокаПодключения, ТекущаяПроцедура + ": не задана строка подключения").Заполнено();

		КаталогБазы = ОбщиеМетоды.УбратьКавычкиВокругПути(Сред(СтрокаПодключения, 3, СтрДлина(СтрокаПодключения) - 2));

		УправлениеИБ.УстановитьПараметрыФайловойИБ(КаталогБазы);
		УправлениеИБ.УстановитьПараметрыАвторизацииИБ(Пользователь, Пароль);

	КонецЕсли;

	// КаталогВременнойИБ = ВременныеФайлы.СоздатьКаталог();
	// УправлениеКонфигуратором.КаталогСборки(КаталогВременнойИБ);

	Если НЕ ПустаяСтрока(ВерсияПлатформы) Тогда
		Если ЗначениеЗаполнено(ПараметрыКоманды) Тогда
			Разрядность = ПараметрыКоманды["--bitness"];
			Разрядность = ОбщиеМетоды.РазрядностьПлатформы(Разрядность);
			Лог.Отладка("Разрядность платформы 1С указана %1", Разрядность);
		Иначе
			Разрядность = Неопределено;
			Лог.Отладка("Разрядность платформы 1С не указана");
		КонецЕсли;

		ПутьКIbcmd = ПутьКIbcmd(ВерсияПлатформы, Разрядность);
		УправлениеИБ.ПутьКПриложению(ПутьКIbcmd);
	КонецЕсли;

	Если ЗначениеЗаполнено(КодЯзыка) Тогда
		Локаль = КодЯзыка;
	КонецЕсли;

	// Если ЗначениеЗаполнено(КодЯзыкаСеанса) Тогда
	// 	УправлениеКонфигуратором.УстановитьКодЯзыкаСеанса(КодЯзыка);
	// КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ИнициализироватьОбъект() 
	
	Лог = Логирование.ПолучитьЛог(ПараметрыСистемы.ИмяЛогаСистемы());
	ВременныйКаталогДанныхСервера = ВременныеФайлы.СоздатьКаталог();
	Локаль = "";
 
	УправлениеИБ = Новый УправлениеИБ;
	УправлениеИБ.УстановитьПараметрыАвтономногоСервера(ВременныйКаталогДанныхСервера);

КонецПроцедуры

Функция ПутьКIbcmd(ВерсияПлатформы, Разрядность)

	Если Не СтрНачинаетсяС(ВерсияПлатформы, "8.3") Тогда
		ВызватьИсключение "Неверная версия платформы <" + ВерсияПлатформы + ">";
	КонецЕсли;
	
	Возврат Платформа1С.ПутьКIBCMD(ВерсияПлатформы, Разрядность);

КонецФункции

#КонецОбласти

#Область ИнициализацияОбъекта

ИнициализироватьОбъект();

#КонецОбласти
