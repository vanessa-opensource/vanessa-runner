///////////////////////////////////////////////////////////////////////////////////////////////////
//
// Сборка cfe-файла из исходников
//
// TODO добавить фичи для проверки команды
//
// Служебный модуль с набором методов работы с командами приложения
//
// Структура модуля реализована в соответствии с рекомендациями
// oscript-app-template (C) EvilBeaver
//
///////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОписаниеПеременных

Перем Лог; // Экземпляр логгера
Перем МенеджерВерсий;

Перем ИмяРасширения;

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ЗарегистрироватьКоманду(Знач ИмяКоманды, Знач Парсер) Экспорт

	ТекстОписания =
		"     Сборка cfe-файла из исходников.";

	ОписаниеКоманды = Парсер.ОписаниеКоманды(ИмяКоманды,
		ТекстОписания);

	Парсер.ДобавитьИменованныйПараметрКоманды(ОписаниеКоманды, "--src",
		"Путь к каталогу с исходниками, пример: --src=./cfe");
	Парсер.ДобавитьИменованныйПараметрКоманды(ОписаниеКоманды, "-s",
		"Краткая команда 'путь к исходникам --src', пример: -s ./cfe");
	Парсер.ДобавитьИменованныйПараметрКоманды(ОписаниеКоманды, "--out", 
		"Путь к файлу cf (*.cf), --out=./Extension.cfe
		|В пути файла можно указать шаблонную переменную $version для подстановки в нее версии расширения
		|Пример: --out=1Cv8_$version.cfe выгрузит файл вида 1Cv8_1.2.3.4.cfe");
	Парсер.ДобавитьИменованныйПараметрКоманды(ОписаниеКоманды, "-o",
		"Краткая команда 'Путь к файлу cf --out', пример: -o ./Extension.cfe");
	Парсер.ДобавитьПараметрФлагКоманды(ОписаниеКоманды, "--current", "Флаг загрузки в указанную базу или -с");
	Парсер.ДобавитьПараметрФлагКоманды(ОписаниеКоманды, "-c", "Флаг загрузки в указанную базу, краткая форма от --current");

	// TODO зачем объявлен параметр "--noupdate", который в коде не используется
	Парсер.ДобавитьПараметрФлагКоманды(ОписаниеКоманды, "--noupdate", "Флаг обновления СonfigDumpInfo.xml");

	Парсер.ДобавитьИменованныйПараметрКоманды(ОписаниеКоманды, "--build-number",
		"Номер сборки для установки в последний разряд номера версии");
	Парсер.ДобавитьПараметрФлагКоманды(ОписаниеКоманды, "--ibcmd",
		"Использовать утилиту ibcmd вместо конфигуратора");

	Парсер.ДобавитьКоманду(ОписаниеКоманды);

КонецПроцедуры

// Выполняет логику команды
//
// Параметры:
//   ПараметрыКоманды - Соответствие - Соответствие ключей командной строки и их значений
//   ДополнительныеПараметры - Структура - дополнительные параметры (необязательно)
//
//  Возвращаемое значение:
//   Число - Код возврата команды.
//
Функция ВыполнитьКоманду(Знач ПараметрыКоманды, Знач ДополнительныеПараметры = Неопределено) Экспорт

	Лог = ОбщиеМетоды.ЛогКоманды(ДополнительныеПараметры);

	ПутьВходящий = ОбщиеМетоды.ПолныйПуть(ОбщиеМетоды.ПолучитьПараметры(ПараметрыКоманды, "-s", "--src"));
	ПутьИсходящий = ОбщиеМетоды.ПолныйПуть(ОбщиеМетоды.ПолучитьПараметры(ПараметрыКоманды,"-o", "--out"));
	ИспользоватьТекущуюИБ = ОбщиеМетоды.ЕстьФлагКоманды(ПараметрыКоманды, "-c", "--current");

	МенеджерВерсий = Новый МенеджерВерсийФайлов1С();

	НомерСборки = ПараметрыКоманды["--build-number"];
	Если ЗначениеЗаполнено(НомерСборки) Тогда

		ИзменитьНомерСборкиВИсходникахКонфигурации(ПутьВходящий, НомерСборки);

	КонецЕсли;
	ПутьИсходящийСВерсией = МенеджерВерсий.ПодставитьНомерВерсии(ПутьВходящий, ПутьИсходящий);

	ИмяРасширения = СтрЗаменить(Строка(Новый УникальныйИдентификатор), "-", "");
	Если ИспользоватьТекущуюИБ Тогда
		СобратьИзИсходниковТекущуюКонфигурацию(ПараметрыКоманды, ПутьВходящий, ПутьИсходящийСВерсией);
	Иначе
		СобратьИзИсходниковВоВременнойБазе(ПараметрыКоманды, ПутьВходящий, ПутьИсходящийСВерсией);
	КонецЕсли;

	Возврат МенеджерКомандПриложения.РезультатыКоманд().Успех;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура СобратьИзИсходниковТекущуюКонфигурацию(ПараметрыКоманды, 
	ПутьВходящий, ПутьИсходящий)

	МенеджерСборки = ОбщиеМетоды.ФабрикаМенеджераСборки(ПараметрыКоманды);
	ДанныеПодключения = ПараметрыКоманды["ДанныеПодключения"];
	МенеджерСборки.Конструктор(ДанныеПодключения, ПараметрыКоманды);

	Лог.Информация("Запускаем сборку расширения из исходников в текущую ИБ...");
	
	Попытка 
		
		МенеджерСборки.СобратьИзИсходниковРасширение(ПутьВходящий, ИмяРасширения, Ложь);
		МенеджерСборки.ВыгрузитьРасширениеВФайл(ПутьИсходящий, ИмяРасширения);
	
	Исключение
		ИнформацияОбОшибке = ИнформацияОбОшибке();
		МенеджерСборки.Деструктор();
		ВызватьИсключение ПодробноеПредставлениеОшибки(ИнформацияОбОшибке);
	КонецПопытки;
			
	МенеджерСборки.Деструктор();

	Лог.Информация("Сборка расширения из исходников в текущую ИБ завершена.");

КонецПроцедуры

Процедура СобратьИзИсходниковВоВременнойБазе(ПараметрыКоманды, 
	ПутьВходящий, ПутьИсходящий)

	ОбщиеМетоды.УстановитьИспользованиеВременнойБазы(ПараметрыКоманды);

	МенеджерСборки = ОбщиеМетоды.ФабрикаМенеджераСборки(ПараметрыКоманды);

	ДанныеПодключения = ПараметрыКоманды["ДанныеПодключения"];
	МенеджерСборки.Конструктор(ДанныеПодключения, ПараметрыКоманды);
	КаталогВременнойИБ = МенеджерСборки.КаталогВременнойИБ();

	Лог.Информация("Запускаем сборку расширения из исходников в файл cfe...");

	Попытка
		
		МенеджерСборки.СоздатьФайловуюБазу(КаталогВременнойИБ);
		МенеджерСборки.СобратьИзИсходниковРасширение(ПутьВходящий, ИмяРасширения, Ложь);
		МенеджерСборки.ВыгрузитьРасширениеВФайл(ПутьИсходящий, ИмяРасширения);

	Исключение
		ИнформацияОбОшибке = ИнформацияОбОшибке();
		МенеджерСборки.Деструктор();
		ВызватьИсключение ПодробноеПредставлениеОшибки(ИнформацияОбОшибке);
	КонецПопытки;

	Лог.Информация("Сборка расширения из исходников в файл cfe завершена.");

КонецПроцедуры

Процедура ИзменитьНомерСборкиВИсходникахКонфигурации(Знач ПутьИсходников, Знач НомерСборки)

	Лог.Информация("Изменяю номер сборки в исходниках конфигурации 1С на %1", НомерСборки);

	СтарыеВерсии = МенеджерВерсий.УстановитьНомерСборкиДляКонфигурации(ПутьИсходников, НомерСборки);

	Для каждого КлючЗначение Из СтарыеВерсии Цикл
		Лог.Информация("    Старая версия %1, файл - %2", КлючЗначение.Значение, КлючЗначение.Ключ);
	КонецЦикла;

КонецПроцедуры

#КонецОбласти
