///////////////////////////////////////////////////////////////////////////////////////////////////
//
// Выполнение команды/действия в 1С:Предприятие в режиме тонкого/толстого клиента с передачей запускаемых обработок и параметров
//
// TODO добавить фичи для проверки команды
//
// Служебный модуль с набором методов работы с командами приложения
//
// Структура модуля реализована в соответствии с рекомендациями
// oscript-app-template (C) EvilBeaver
//
///////////////////////////////////////////////////////////////////////////////////////////////////

#Использовать logos
#Использовать v8runner

Перем Лог;

///////////////////////////////////////////////////////////////////////////////////////////////////
// Прикладной интерфейс

// Регистрация команды и ее аргументов/ключей
//
// Параметры:
//   ИмяКоманды - Строка - имя команды
//   Парсер - Парсер - объект парсера
//
Процедура ЗарегистрироватьКоманду(Знач ИмяКоманды, Знач Парсер) Экспорт

	ТекстОписания =
		"     Выполнение команды/действия в 1С:Предприятие в режиме тонкого/толстого клиента с передачей запускаемых обработок и параметров.";

	ОписаниеКоманды = Парсер.ОписаниеКоманды(ИмяКоманды,
		ТекстОписания);

	Парсер.ДобавитьИменованныйПараметрКоманды(ОписаниеКоманды, "--command",
		"Строка, передаваемая в ПараметрыЗапуска /C''");
	Парсер.ДобавитьИменованныйПараметрКоманды(ОписаниеКоманды, "--execute",
		"Путь внешней обработки 1С для запуска в предприятии
		|  Разрешено использовать переменную $runnerRoot для указания пути к каталогу vanessa-runner.
		|  В этом случае можно использовать обработки из vanessa-runner.
		|  vrunner run --command ""Путь=МойКаталог;ЗавершитьРаботуСистемы"" --execute $runnerRoot/epf/ЗагрузитьРасширениеВРежимеПредприятия.epf");
	Парсер.ДобавитьПараметрФлагКоманды(ОписаниеКоманды, "--no-wait",
		"Не ожидать завершения запущенной команды/действия");
	Парсер.ДобавитьИменованныйПараметрКоманды(ОписаниеКоманды, "--online-file",
		"Путь к файлу с online-записью выполнения");

	Парсер.ДобавитьИменованныйПараметрКоманды(ОписаниеКоманды, "--exitCodePath",
		"Путь к текстовому файлу, обозначающему статус выполнения.
		|  Отсутствие файла после выполнения задания означает ошибку запуска.
		|  Значение ""0"" означает успешное выполнение запуска.
		|  Значение ""1"" означает ошибку при выполнении запуска.
		|  Значение ""2"" означает выполнение запуска с предупреждением.
		|  Любое другое значение эквивалентно отсутствию файла.");

	Парсер.ДобавитьКоманду(ОписаниеКоманды);

КонецПроцедуры // ЗарегистрироватьКоманду

// Выполняет логику команды
//
// Параметры:
//   ПараметрыКоманды - Соответствие - Соответствие ключей командной строки и их значений
//   ДополнительныеПараметры - Соответствие - дополнительные параметры (необязательно)
//
Функция ВыполнитьКоманду(Знач ПараметрыКоманды, Знач ДополнительныеПараметры = Неопределено) Экспорт

	Лог = ДополнительныеПараметры.Лог;

	// TODO отрефакторить получение ЗапускатьТолстыйКлиент
	ЗапускатьТолстыйКлиент = ОбщиеМетоды.УказанПараметрТолстыйКлиент(ПараметрыКоманды["--ordinaryapp"], Лог);
	ДанныеПодключения = ПараметрыКоманды["ДанныеПодключения"];

	МенеджерКонфигуратора = Новый МенеджерКонфигуратора;

	ПутьОбработки1С = ПараметрыКоманды["--execute"];
	ПутьОбработки1С = Заменить_runnerRoot_на_КаталогVanessaRunner(ПутьОбработки1С);
	ПутьОбработки1С = ОбщиеМетоды.ПолныйПуть(ПутьОбработки1С);

	ОжидатьЗавершения = Не ПараметрыКоманды["--no-wait"];

	МенеджерКонфигуратора.ИнициализацияИзПараметровКоманды(ДанныеПодключения, ПараметрыКоманды);

	ПутьКФайлуСтатусаВыполнения = ПараметрыКоманды["--exitCodePath"];
	КомандаЗапуска = КомандаЗапуска(ПараметрыКоманды["--command"], ПутьКФайлуСтатусаВыполнения);
	ПутьЛогаВыполнения =  ПараметрыКоманды["--online-file"];

	ДопСообщения = МенеджерКонфигуратора.НовыеДопСообщенияДляЗапускаПредприятия();
	ДопСообщения.Ключ = "ЗапускВРежимеПредприятия";
	ДопСообщения.СообщениеВСлучаеУспеха = "Выполнение в режиме 1С:Предприятие завершено";
	ДопСообщения.СообщениеВСлучаеПадения = "Возникла ошибка при выполнении в режиме 1С:Предприятие!";
	ДопСообщения.СообщениеВСлучаеПропуска = "Выполнение команды в режиме 1С:Предприятие завершилось с предупреждением!";

	Попытка
		МенеджерКонфигуратора.ЗапуститьВРежимеПредприятияСПроверкойВыполнения(
			ДопСообщения,
			КомандаЗапуска, ПутьОбработки1С,
			ЗапускатьТолстыйКлиент, ПараметрыКоманды["--additional"],
			ОжидатьЗавершения,
			ПутьЛогаВыполнения,
			ПутьКФайлуСтатусаВыполнения);
	Исключение
		МенеджерКонфигуратора.Деструктор();
		ВызватьИсключение;
	КонецПопытки;

	МенеджерКонфигуратора.Деструктор();

	Возврат МенеджерКомандПриложения.РезультатыКоманд().Успех;
КонецФункции // ВыполнитьКоманду

Функция КомандаЗапуска(Знач ПараметрКомандаЗапуска, Знач ПутьКФайлуСтатусаВыполнения)

	КомандыЗапуска = Новый Массив;
	Если ЗначениеЗаполнено(ПараметрКомандаЗапуска) Тогда
		КомандыЗапуска.Добавить(ПараметрКомандаЗапуска);
	КонецЕсли;

	Если ЗначениеЗаполнено(ПутьКФайлуСтатусаВыполнения) Тогда
		КомандыЗапуска.Добавить(СтрШаблон("exitCodePath=%1", ПутьКФайлуСтатусаВыполнения));
	КонецЕсли;

	Если КомандыЗапуска.Количество() = 0 Тогда
		Возврат "";
	КонецЕсли;

	КомандаЗапуска = СтрСоединить(КомандыЗапуска, ";");

	Если ПараметрыСистемы.ЭтоWindows Тогда
		КомандаЗапуска = """" + КомандаЗапуска + """";
	Иначе
		КомандаЗапуска = СтрЗаменить(КомандаЗапуска, """", "\""");
		КомандаЗапуска = СтрЗаменить(КомандаЗапуска, ";", "\;");
	КонецЕсли;

	Возврат КомандаЗапуска;

КонецФункции

Функция Заменить_runnerRoot_на_КаталогVanessaRunner(Знач ИсходнаяСтрока)
	Возврат СтрЗаменить(ИсходнаяСтрока, "$runnerRoot", ОбщиеМетоды.КаталогПроекта());
КонецФункции
