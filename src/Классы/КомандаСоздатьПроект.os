///////////////////////////////////////////////////////////////////
//
// Служебный модуль с реализацией работы команды version
//
// Структура модуля реализована в соответствии с рекомендациями
// oscript-app-template (C) EvilBeaver
//
///////////////////////////////////////////////////////////////////
#Использовать gui
#Использовать 1commands
///////////////////////////////////////////////////////////////////
//Основная форма скрипта
Перем Форма;
//Стили закрепления (низ, вверх, лево, право)
Перем СтильЗакрепления;
//Индикатор создания проекта
Перем Индикатор;
///////////////////////////////////////////////////////////////////

Процедура ЗарегистрироватьКоманду(Знач ИмяКоманды, Знач Парсер) Экспорт
	
	ОписаниеКоманды = Парсер.ОписаниеКоманды(ИмяКоманды, "     Создание структуры проекта.");
	Парсер.ДобавитьКоманду(ОписаниеКоманды);
	
КонецПроцедуры // ЗарегистрироватьКоманду

// Выполняет логику команды
//
// Параметры:
//   ПараметрыКоманды - Соответствие - Соответствие ключей командной строки и их значений
//   ДополнительныеПараметры - Соответствие - дополнительные параметры (необязательно)
Функция ВыполнитьКоманду(Знач ПараметрыКоманды, Знач ДополнительныеПараметры) Экспорт
	
	СоздатьФормуНастроек();
	Возврат МенеджерКомандПриложения.РезультатыКоманд().Успех;
	
КонецФункции // ВыполнитьКоманду

///////////////////////////////////////////////////////////////////

Процедура СоздатьФормуНастроек()
	
	УправляемыйИнтерфейс = Новый УправляемыйИнтерфейс();
	
	СтильЗакрепления = УправляемыйИнтерфейс.СтильЗакрепления;
	
	Форма = УправляемыйИнтерфейс.СоздатьФорму();
	Форма.СтартоваяПозиция = ПозицияОкнаПриОткрытии.ЦентрЭкрана;
	Форма.УстановитьДействие(ЭтотОбъект, "ПриОткрытии", "ПриОткрытииФормы");
	Форма.Показать();
	
КонецПроцедуры

Процедура ПриОткрытииФормы() Экспорт
	
	НастройкиФормы();
	
	ПолеПроектВТекущемКаталоге = Форма.Элементы.Добавить("ПроектВТекущемКаталоге", "ПолеФормы", Неопределено);
	ПолеПроектВТекущемКаталоге.Вид = Форма.ВидПоляФормы.ПолеФлажка;
	ПолеПроектВТекущемКаталоге.Заголовок = "Создать проект в текущем каталоге";
	ПолеПроектВТекущемКаталоге.ПоложениеЗаголовка = Форма.ПоложениеЗаголовка.Право;
	ПолеПроектВТекущемКаталоге.Значение = Истина;
	
	СоздатьЭлементыБиблиотек();
	СоздатьЭлементыПодвала();
	
КонецПроцедуры

Процедура НастройкиФормы()
	
	Форма.Заголовок = "Настройки создания проекта";
	Форма.Ширина = 350;
	Форма.Высота = 200;
	
КонецПроцедуры

Процедура СоздатьЭлементыБиблиотек()
	
	ГруппаБиблиотек = Форма.Элементы.Добавить("ГруппаБиблиотек", "ГруппаФормы", Неопределено);
	ГруппаБиблиотек.Вид = Форма.ВидГруппыФормы.ОбычнаяГруппа;
	ГруппаБиблиотек.Заголовок = "Выберите необходимые библиотеки для вашего проекта:";
	
	Библиотеки = ДоступныеБиблиотеки();
	
	Для Каждого СтрокаБиблиотека Из Библиотеки Цикл
		
		ПолеФлажок = Форма.Элементы.Добавить(СтрокаБиблиотека, "ПолеФормы", ГруппаБиблиотек);
		ПолеФлажок.Вид = Форма.ВидПоляФормы.ПолеФлажка;
		ПолеФлажок.Заголовок = СтрокаБиблиотека;
		ПолеФлажок.ПоложениеЗаголовка = Форма.ПоложениеЗаголовка.Право;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура СоздатьЭлементыПодвала()
	
	ГруппаПодвал = Форма.Элементы.Добавить("ГруппаПодвал", "ГруппаФормы", Неопределено);
	ГруппаПодвал.Вид = Форма.ВидГруппыФормы.ОбычнаяГруппа;

	Индикатор = Форма.Элементы.Добавить("ПрогрессБар", "ПолеФормы", ГруппаПодвал);
	Индикатор.Вид = Форма.ВидПоляФормы.ПолеИндикатора;
	Индикатор.Ширина = 220;
	Индикатор.Закрепление = СтильЗакрепления.Лево;
	
	КнопкаОК = Форма.Элементы.Добавить("КнопкаОК", "КнопкаФормы", ГруппаПодвал);
	КнопкаОК.Заголовок = "ОК";
	КнопкаОК.УстановитьДействие(ЭтотОбъект, "Нажатие", "СоздатьПроект");
	
КонецПроцедуры

Процедура СоздатьПроект() Экспорт
	
	Индикатор.Значение = 5;
	ПроектВТекущемКаталоге = Форма.Элементы.Найти("ПроектВТекущемКаталоге").Значение;
	
	ГруппаБиблиотек = Форма.Элементы.Найти("ГруппаБиблиотек");
	ЭлементыБиблиотек = ГруппаБиблиотек.Элементы;
	
	Результат = КлонироватьШаблон(ПроектВТекущемКаталоге);
	
	Если НЕ Результат = 0 Тогда
		Форма.Закрыть();
		Возврат;
	КонецЕсли;

	Индикатор.Значение = 25;
	
	УстановитьБиблиотеки(ЭлементыБиблиотек);
	
	Форма.Закрыть();
	
КонецПроцедуры

Функция КлонироватьШаблон(ПроектВТекущемКаталоге)
	
	Команда = Новый Команда;
	Команда.УстановитьКоманду("git");
	Команда.ДобавитьПараметр("clone");
	Команда.ДобавитьПараметр("https://github.com/vanessa-opensource/vanessa-bootstrap.git");
	
	Если ПроектВТекущемКаталоге Тогда
		Команда.ДобавитьПараметр(".");
	КонецЕсли;
	
	КодВозврата = Команда.Исполнить();
	
	Если НЕ КодВозврата = 0 Тогда
		Сообщить("Не удалось клонировать шаблон:");
	КонецЕсли;
	
	Сообщить(Команда.ПолучитьВывод());
	
	Возврат КодВозврата;
	
КонецФункции

Процедура УстановитьБиблиотеки(ЭлементыБиблиотек)
	
	Библиотеки = ДоступныеБиблиотеки();

	КоличествоЭлементов = Библиотеки.Количество();
	ВесБиблиотеки = (100 - Индикатор.Значение) / КоличествоЭлементов;
	
	Для Каждого СтрокаБиблиотека Из Библиотеки Цикл
		
		Индикатор.Значение = Индикатор.Значение + ВесБиблиотеки;

		Значение = ЭлементыБиблиотек.Найти(СтрокаБиблиотека).Значение;
		Если НЕ Значение Тогда
			Продолжить;
		КонецЕсли;
		
		Если СтрокаБиблиотека = "gitsync" Тогда
			ВыполнитьКомандуПоСтрокеЗапуска("opm install gitsync");
		ИначеЕсли СтрокаБиблиотека = "gitrules" Тогда
			ВыполнитьКомандуПоСтрокеЗапуска("opm install gitrules");
			ВыполнитьКомандуПоСтрокеЗапуска("gitrules install");
		ИначеЕсли СтрокаБиблиотека = "precommit1c" Тогда
			ВыполнитьКомандуПоСтрокеЗапуска("opm install precommit1c");
			ВыполнитьКомандуПоСтрокеЗапуска("precommit1c --install");
		Иначе
			Продолжить;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ВыполнитьКомандуПоСтрокеЗапуска(СтрокаЗапуска)
	
	Команда = Новый Команда;
	Команда.УстановитьСтрокуЗапуска(СтрокаЗапуска);
	
	КодВозврата = Команда.Исполнить();
	
	Сообщить(Команда.ПолучитьВывод());
	
	Возврат КодВозврата;
	
КонецФункции

Функция ДоступныеБиблиотеки()
	
	Библиотеки = Новый Массив;
	Библиотеки.Добавить("gitsync");
	Библиотеки.Добавить("gitrules");
	Библиотеки.Добавить("precommit1c");
	
	Возврат Библиотеки;
	
КонецФункции