///////////////////////////////////////////////////////////////////////////////////////////////////
//
// Выполнение загрузки расширения из cfe-файла в базу данных
//
// Служебный модуль с набором методов работы с командами приложения
//
// Структура модуля реализована в соответствии с рекомендациями
// oscript-app-template (C) EvilBeaver
//
///////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОписаниеПеременных

Перем Лог; // Экземпляр логгера

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ЗарегистрироватьКоманду(Знач ИмяКоманды, Знач Парсер) Экспорт

	ТекстОписания =
		"     Загрузка расширения в конфигурацию из cfe-файла.";

	ОписаниеКоманды = Парсер.ОписаниеКоманды(ИмяКоманды,
		ТекстОписания);

	Парсер.ДобавитьИменованныйПараметрКоманды(ОписаниеКоманды, "--file", "Путь к cfe-файлу расширения, например: --file=./1Cv8.cfe");
	Парсер.ДобавитьИменованныйПараметрКоманды(ОписаниеКоманды, "-f",
		"Краткая команда 'путь к cfe --file', пример: -f ./1Cv8.cfe
		|       В пути файла можно указать шаблонную переменную $version для подстановки в нее версии конфигурации
		|       Пример: 1Cv8_$version.cfе выгрузит файл вида 1Cv8_1.2.3.4.cfе");
	Парсер.ДобавитьИменованныйПараметрКоманды(ОписаниеКоманды, "--extension", "Имя расширения. Обязательный параметр.");
	Парсер.ДобавитьПараметрФлагКоманды(ОписаниеКоманды, "--updatedb", "Признак обновления расширения");
	Парсер.ДобавитьПараметрФлагКоманды(ОписаниеКоманды, "--ibcmd",
		"Использовать утилиту ibcmd вместо конфигуратора");

	Парсер.ДобавитьКоманду(ОписаниеКоманды);

КонецПроцедуры // ЗарегистрироватьКоманду

// Выполняет логику команды
//
// Параметры:
//   ПараметрыКоманды - Соответствие - Соответствие ключей командной строки и их значений
//   ДополнительныеПараметры - Структура - дополнительные параметры (необязательно)
//
//  Возвращаемое значение:
//   Число - Код возврата команды.
//
Функция ВыполнитьКоманду(Знач ПараметрыКоманды, Знач ДополнительныеПараметры = Неопределено) Экспорт

	Лог = ОбщиеМетоды.ЛогКоманды(ДополнительныеПараметры);

	ИмяРасширения = ПараметрыКоманды["--extension"];
	Если Не ЗначениеЗаполнено(ИмяРасширения) Тогда
		ВызватьИсключение "Не задано имя расширения в ключе --extension";
	КонецЕсли;

	ДанныеПодключения = ПараметрыКоманды["ДанныеПодключения"];
	ОбновитьКонфигурациюИБ = ПараметрыКоманды["--updatedb"];

	ПутьВходящий = ОбщиеМетоды.ПолныйПуть(ОбщиеМетоды.ПолучитьПараметры(ПараметрыКоманды, "-f", "--file"));
	МенеджерВерсий = Новый МенеджерВерсийФайлов1С();
	ПутьВходящийСВерсией = МенеджерВерсий.НайтиФайлСВерсией(ПутьВходящий);

	МенеджерСборки = ОбщиеМетоды.ФабрикаМенеджераСборки(ПараметрыКоманды);
	МенеджерСборки.Конструктор(ДанныеПодключения, ПараметрыКоманды);

	Лог.Информация("Запускаем загрузку расширения из cfe...");
	Попытка
		МенеджерСборки.ЗагрузитьФайлРасширения(ПутьВходящийСВерсией, ИмяРасширения, ОбновитьКонфигурациюИБ);
	Исключение
		МенеджерСборки.Деструктор();
		ВызватьИсключение;
	КонецПопытки;
	Лог.Информация("Загрузка расширения из cfe завершена.");

	МенеджерСборки.Деструктор();

	Возврат МенеджерКомандПриложения.РезультатыКоманд().Успех;

КонецФункции // ВыполнитьКоманду

#КонецОбласти
