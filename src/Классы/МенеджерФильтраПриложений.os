#Использовать logos

#Область ОписаниеПеременных

Перем Лог;
Перем РежимРаботыФильтра;
Перем ФильтрСеансов;
Перем ФильтрКакИсключение;

#КонецОбласти

#Область ПрограммныйИнтерфейс

Процедура ПриСозданииОбъекта(Знач СтрокаФильтр, Знач ПарамРежимРаботыФильтра) // BSLLS:NonExportMethodsInApiRegion-off
	РежимРаботыФильтра = ПарамРежимРаботыФильтра;
	ФильтрКакИсключение = Ложь;
	Если Не ЗначениеЗаполнено(СтрокаФильтр) Тогда
		РежимРаботыФильтра = "OFF";
		Возврат;
	КонецЕсли;

	ФильтрСеансов = ПолучитьСоставляющиеФильтра(СтрокаФильтр);

	Если ЗначениеЗаполнено(РежимРаботыФильтра) Тогда

		РежимРаботыФильтра = ВРег(РежимРаботыФильтра);
		ФильтрСеансов = ПолучитьИзмененныйФильтр(РежимРаботыФильтра, ФильтрСеансов);

		Если РежимРаботыФильтра = "EXCEPT" Тогда
			ФильтрКакИсключение = Истина;
		КонецЕсли;

	КонецЕсли;
КонецПроцедуры

Процедура УстановитьЛог(Знач ПарамЛог) Экспорт
	Лог = ПарамЛог;
КонецПроцедуры

Функция СеансПодходит(Приложение, Пользователь) Экспорт

	Если РежимРаботыФильтра = "OFF" Тогда
		Возврат Истина;
	КонецЕсли;

	СеансВключенВФильтр = ПараметрСеансаВФильтре("appid", Приложение);
	Если Не СеансВключенВФильтр Тогда
		СеансВключенВФильтр = ПараметрСеансаВФильтре("name", Пользователь);
	КонецЕсли;

	Возврат (НЕ ФильтрКакИсключение И СеансВключенВФильтр)
		Или (ФильтрКакИсключение И НЕ СеансВключенВФильтр);

КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьСоставляющиеФильтра(СтрокаФильтра)

	Результат = Новый Структура;

	Если ПустаяСтрока(СтрокаФильтра) Тогда
		Возврат Результат;
	КонецЕсли;

	СоставФильтра = СтрРазделить(СтрокаФильтра, "|", Ложь);

	Для Каждого ТекСтр Из СоставФильтра Цикл
		РазобратьСоставляющуюФильтра(Результат, ТекСтр);
	КонецЦикла;

	Возврат Результат;

КонецФункции

Процедура РазобратьСоставляющуюФильтра(РезультатСтруктура, Составляющая)

	ПозРавно = СтрНайти(Составляющая, "=");
	Если ПозРавно = 0 Тогда
		Возврат;
	КонецЕсли;

	ИмяФильтра = Лев(Составляющая, ПозРавно - 1);

	Попытка
		ПроверкаИмени = Новый Структура(ИмяФильтра); // BSLLS:UnusedLocalVariable-off
	Исключение
		Лог.Предупреждение("Неверное имя фильтра, требуется имя по правилам образования переменных 1С: " + ИмяФильтра);
		Возврат;
	КонецПопытки;

	СодержаниеСтрока = Сред(Составляющая, ПозРавно + 1);
	Если ПустаяСтрока(СодержаниеСтрока) Тогда
		Возврат;
	КонецЕсли;

	СодержаниеМассив = СтрРазделить(СодержаниеСтрока, ";", Ложь);
	РезультатСтруктура.Вставить(ИмяФильтра, СодержаниеМассив);

КонецПроцедуры

Функция ПолучитьИзмененныйФильтр(Знач РежимРаботыФильтра, Знач ФильтрСеансов)

	ВстроеннаяКонстантаСтрокаФильтра = ""; // TODO вставить встроенный фильтр (фильтр по умолчанию) из настроек ванесса-раннер

	Если РежимРаботыФильтра = "OFF" Тогда
		Возврат Новый Структура;

	ИначеЕсли РежимРаботыФильтра = "DEFAULT" Тогда
		Возврат ПолучитьСоставляющиеФильтра(ВстроеннаяКонстантаСтрокаФильтра);

	ИначеЕсли РежимРаботыФильтра = "ALL" Тогда
		ФильтрСеансовВстроенный = ПолучитьСоставляющиеФильтра(ВстроеннаяКонстантаСтрокаФильтра);
		ДополнитьФильтрСеансов(ФильтрСеансов, ФильтрСеансовВстроенный);
	КонецЕсли; // BSLLS:IfElseIfEndsWithElse-off

	Возврат ФильтрСеансов;

КонецФункции

Процедура ДополнитьФильтрСеансов(ФильтрыСеансовПользователь, ФильтрСеансовВстроенный)

	Для Каждого Фильтр Из ФильтрСеансовВстроенный Цикл

		МассивКлючаВстроенный = Фильтр.Значение;

		Если ФильтрыСеансовПользователь.Свойство(Фильтр.Ключ) Тогда
			МассивКлючаПользователь = Неопределено;
			ФильтрыСеансовПользователь.Свойство(Фильтр.Ключ, МассивКлючаПользователь);
			//TODO в таком варианте встроенные настройки нельзя будет переопределить, что нехорошо!
			ДополнитьМассивКлюча(МассивКлючаВстроенный, МассивКлючаПользователь);
		КонецЕсли;

		ФильтрыСеансовПользователь.Вставить(Фильтр.Ключ, МассивКлючаВстроенный);

	КонецЦикла;

КонецПроцедуры

Процедура ДополнитьМассивКлюча(Приемник, Источник)

	Для каждого Элемент Из Источник Цикл

		Если Приемник.Найти(Элемент) = Неопределено Тогда
			Приемник.Добавить(Элемент);
		КонецЕсли;

	КонецЦикла;

КонецПроцедуры

Функция ПараметрСеансаВФильтре(ИмяФильтра, ПроверяемоеЗначение)

	Если Не ФильтрСеансов.Свойство(ИмяФильтра) Тогда
		Возврат Ложь;
	КонецЕсли;

	ЗначенияФильтра = ФильтрСеансов[ИмяФильтра];
	Для Каждого ТекЗначение Из ЗначенияФильтра Цикл
		ВФильтре = ВРег(ТекЗначение) = ВРег(ПроверяемоеЗначение);
		Если ВФильтре Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;

	Возврат Ложь;

КонецФункции

#КонецОбласти
