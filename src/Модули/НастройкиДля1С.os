#Использовать logos

Перем Лог;
Перем Переменные;

Функция ПрочитатьНастройки(Знач ПутьКНастройкам) Экспорт
	Рез = Неопределено;

	Лог = Логирование.ПолучитьЛог(ПараметрыСистемы.ИмяЛогаСистемы());

	Если Не ПустаяСтрока(ПутьКНастройкам) Тогда
		Лог.Отладка("Читаю настройки из файла %1", ПутьКНастройкам);

		ФайлНастроек = Новый Файл(ОбщиеМетоды.ПолныйПуть(ПутьКНастройкам));
		СообщениеОшибки = СтрШаблон("Ожидали, что файл настроек %1 существует, а его нет.", ФайлНастроек.ПолноеИмя);
		Ожидаем.Что(ФайлНастроек.Существует(), СообщениеОшибки).ЭтоИстина();

		ЧтениеТекста = Новый ЧтениеТекста(ФайлНастроек.ПолноеИмя, КодировкаТекста.UTF8);
		
		СтрокаJSON = ЧтениеТекста.Прочитать();
		ЧтениеТекста.Закрыть();

		ПарсерJSON = Новый ПарсерJSON();
		Рез = ПарсерJSON.ПрочитатьJSON(СтрокаJSON);
		
		Лог.Отладка("Успешно прочитали настройки");
		Лог.Отладка("Настройки из файла:");
		Для каждого КлючЗначение Из Рез Цикл
			Лог.Отладка("	%1 = %2", КлючЗначение.Ключ, КлючЗначение.Значение);
		КонецЦикла;
	Иначе
		Лог.Отладка("Файл настроек не передан. Использую значение по умолчанию.");
	КонецЕсли;
	Возврат Рез;
КонецФункции

Функция ПолучитьНастройку(Знач Настройки, Знач ИмяНастройки, Знач ЗначениеПоУмолчанию, 
		Знач РабочийКаталогПроекта, Знач ОписаниеНастройки, Знач ПолучатьПолныйПуть = Истина) Экспорт

	Рез = ЗначениеПоУмолчанию;
	Если Настройки <> Неопределено Тогда
		Рез_Врем = Настройки.Получить(ИмяНастройки);
		Если Рез_Врем <> Неопределено Тогда
			Лог.Отладка("	Ключ %1, Значение %2", ИмяНастройки, Рез_Врем);

			Рез = ЗаменитьШаблонныеПеременныеВСтроке(Рез_Врем);

			Лог.Отладка("В настройках нашли %1 %2", ОписаниеНастройки, Рез);
		КонецЕсли;
	КонецЕсли;
	Лог.Отладка("Использую %1 %2", ОписаниеНастройки, Рез);
	
	Если ПолучатьПолныйПуть Тогда
		Рез = ОбщиеМетоды.ПолныйПуть(Рез);
		Лог.Отладка("Использую %1 (полный путь) %2", ОписаниеНастройки, Рез);
	КонецЕсли;
	Возврат Рез;
КонецФункции

// Добавить шаблонную переменную
//
// Параметры:
//   Переменная - Строка - имя переменной-ключа
//   Значение - Строка - значение, на которое нужно заменить
//
Процедура ДобавитьШаблоннуюПеременную(Знач Переменная, Знач Значение) Экспорт
	Лог = Логирование.ПолучитьЛог(ПараметрыСистемы.ИмяЛогаСистемы());

	Если Не ЗначениеЗаполнено(Переменные) Тогда
		Переменные = Новый Структура;
	КонецЕсли;
	Лог.Отладка("Добавляю шаблонную переменную %1, значение <%2>", Переменная, Значение);
	Переменные.Вставить(Переменная, Значение);
КонецПроцедуры

// ЗаменитьШаблонныеПеременныеВКоллекции
//
// Параметры:
//   КоллекцияПараметров - Соответствие - коллекция, в которой меняются шаблонные переменные на
//
Процедура ЗаменитьШаблонныеПеременныеВКоллекции(КоллекцияПараметров) Экспорт
	Лог = Логирование.ПолучитьЛог(ПараметрыСистемы.ИмяЛогаСистемы());

	Приемник = Новый Соответствие;
	Для каждого КлючЗначение Из КоллекцияПараметров Цикл
		Значение = КлючЗначение.Значение;
		Если ТипЗнч(Значение) = Тип("Строка") Тогда
			Значение = ЗаменитьШаблонныеПеременныеВСтроке(Значение);
		КонецЕсли;
		Приемник.Вставить(КлючЗначение.Ключ, Значение);
	КонецЦикла;
	Для каждого КлючЗначение Из Приемник Цикл
		КоллекцияПараметров.Вставить(КлючЗначение.Ключ, КлючЗначение.Значение);
	КонецЦикла;
КонецПроцедуры

Функция ЗаменитьШаблонныеПеременныеВСтроке(Знач ИсходнаяСтрока)
	Рез = ИсходнаяСтрока;
	Для каждого КлючЗначение Из Переменные Цикл
		Рез = СтрЗаменить(Рез, "$" + КлючЗначение.Ключ, КлючЗначение.Значение);
		Рез = СтрЗаменить(Рез, "$" + НРег(КлючЗначение.Ключ), КлючЗначение.Значение);
	КонецЦикла;
	Если Рез <> ИсходнаяСтрока Тогда
		Лог.Отладка("Выполнена замена с помощью шаблонных переменных.
		|	Исходное значение <%1>,
		|	Результат <%2>", ИсходнаяСтрока, Рез);
	КонецЕсли;
	Возврат Рез;
КонецФункции
