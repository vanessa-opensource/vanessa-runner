# MIT License
# Copyright (C) 2020 Tymko Oleg <olegtymko@yandex.ru> and contributors
# All rights reserved.

name: Контроль качества
# Любой пуш и pr в проекте но с фильтром по основному проекту
on: [push, pull_request]

env:
  # отключение безопасности установки
  ACTIONS_ALLOW_UNSECURE_COMMANDS: true

jobs:
  coverage:
    if: |
      github.repository == 'vanessa-opensource/vanessa-runner' ||
      always()
    runs-on: self-hosted
    # runs-on: ${{ matrix.os }}
    # strategy:
    #   fail-fast: false
    #   matrix:
    #     # os: [ubuntu-latest]
    #     oscript_version: ['1.4.0']

    steps:
      # Загрузка проекта
      - name: Актуализация
        uses: actions/checkout@v2
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0

      # Установка OneScript конкретной версии
      # - name: Установка OneScript
      #   uses: otymko/setup-onescript@v1.1
      #   with:
      #     version: ${{ matrix.oscript_version }}

      # Установка зависимостей пакета
      - name: Установка зависимостей
        shell: cmd
        run: |
          opm install --dev
          opm install -l
        # run: |
        #   opm install opm
        #   opm install add
        #   opm install --dev

      # Запуск тестов и сбор покрытия кода
      - name: Покрытие кода
        run: oscript ./tasks/coverage.os

      - name: Заливка отчетов о покрытии кода
        uses: actions/upload-artifact@v2
        with:
          name: code-coverage-report
          path: |
            coverage
  
  sonar-analyze:
    if: |
      github.repository == 'vanessa-opensource/vanessa-runner' ||
      always()
    runs-on: ubuntu-18.04
    needs: coverage
    steps:

      # Актуализация
      - uses: actions/checkout@v2
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0

      - name: Получение отчетов о покрытии кода
        uses: actions/download-artifact@v2
        with:
          name: code-coverage-report
          path: coverage
          
      - name: Display structure of downloaded files
        run: ls -R

      - name: Display structure of downloaded files
        run: ls -R coverage

        # https://stackoverflow.com/questions/58033366/how-to-get-current-branch-within-github-actions
      - name: Извлечение имени текущей ветки
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

      - name: Извлечение версии пакета
        shell: bash
        run: echo "##[set-output name=version;]`cat src/Модули/ПараметрыСистемы.os | grep "Версия\s*=" | sed 's|[^"]*"||' | sed -r 's/".+//'`"
        id: extract_version

      - name: Установка Sonar-scanner
        uses: warchant/setup-sonar-scanner@v1

      # Анализ проекта в SonarQube (ветка)
      - name: Анализ в SonarQube (branch)
        if: github.event_name == 'push'
        run: sonar-scanner
            -Dsonar.login=${{ secrets.SONARQUBE_TOKEN }}
            -Dsonar.host.url=${{ secrets.SONARQUBE_HOST }}
            -Dsonar.branch.name=${{ steps.extract_branch.outputs.branch }}
            -Dsonar.projectVersion=${{ steps.extract_version.outputs.version }}

      # Анализ проекта в SonarQube (PR)
      # https://docs.sonarqube.org/latest/analysis/pull-request/
      - name: Анализ в SonarQube (pull-request)
        if: github.event_name == 'pull_request'
        run: sonar-scanner
            -Dsonar.login=${{ secrets.SONARQUBE_TOKEN }}
            -Dsonar.host.url=${{ secrets.SONARQUBE_HOST }}
            -Dsonar.branch.name=${{ steps.extract_branch.outputs.branch }}
            -Dsonar.pullrequest.key=${{ github.event.pull_request.number }}
            -Dsonar.pullrequest.branch=${{ github.event.pull_request.head.ref }}
            -Dsonar.pullrequest.base=${{ github.event.pull_request.base.ref }}
            -Dsonar.scm.revision=${{ github.event.pull_request.head.sha }}
