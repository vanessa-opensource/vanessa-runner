&НаКлиенте
Перем ИмяФайлаРезультата;

&НаКлиенте
Перем МаксИтерацийОжиданияРезультатов;

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПодключитьОбработчикОжидания("ПодключитьЗагрузкуРасширения", 2, Истина);
	
КонецПроцедуры

&НаСервере
Функция ОпределитьИдентификаторРасширения(ИмяФайла) 
	Перем Результат;
	Результат = Неопределено;
	
	УстановитьПривилегированныйРежим(Истина);
	Расширения = РасширенияКонфигурации.Получить(Неопределено);
	УстановитьПривилегированныйРежим(Ложь);
	
	Для Каждого Расширение Из Расширения Цикл 
		
		Если Найти(Нрег(ИмяФайла), Нрег(Расширение.Имя)) > 0 Тогда 
			Результат = Строка(Расширение.УникальныйИдентификатор);
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ЗаписатьРезультатПодключения(ИмяФайла, Результат)
	
	ТекстовыйДокумент = Новый ТекстовыйДокумент;
	ТекстовыйДокумент.ДобавитьСтроку(Результат);
	Попытка
		ТекстовыйДокумент.Записать(ИмяФайла);
	Исключение
	    //ОписаниеОшибки()
	КонецПопытки; 
	
	ЗавершитьРаботуСистемы(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодключитьЗагрузкуРасширения() Экспорт 
	
	МассивПараметров = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ПараметрЗапуска, ";");
	Если МассивПараметров.Количество() < 2 Тогда
		ЗавершитьРаботуСистемы(Истина);
	КонецЕсли;
		
	ФайлРасширения = Новый Файл(МассивПараметров[0]);
	Если НЕ ФайлРасширения.Существует() Тогда
		ЗаписатьРезультатПодключения(МассивПараметров[1], "Файл не существует "+МассивПараметров[0]);
	КонецЕсли;
	
	ИмяФайлаРезультата = МассивПараметров[1];
	
	ИдентификаторРасширения = ОпределитьИдентификаторРасширения(ФайлРасширения.ИмяБезРасширения);
	
	Контекст = Новый Структура;
	Контекст.Вставить("ИдентификаторРасширения", ИдентификаторРасширения);
	Контекст.Вставить("МножественныйВыбор", Ложь);
	
	
	РасширенияФайла = "*.cfe";
	НачатьПомещениеФайла(Новый ОписаниеОповещения("ЗагрузитьРасширениеПослеПомещенияФайла", ЭтотОбъект, Контекст),
			, ФайлРасширения.ПолноеИмя, Ложь, ЭтотОбъект.УникальныйИдентификатор);

	
	//ЗавершитьРаботуСистемы(Истина);
	
	//ПодключитьОбработчикОжидания("ЗавершитьРаботуОжидание", 45);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьРаботуОжидание() Экспорт
	ЗавершитьРаботуСистемы(Истина);
КонецПроцедуры
 

&НаКлиенте
Процедура ЗагрузитьРасширениеПослеПомещенияФайла(ФайлПомещен, Адрес, ВыбранноеИмяФайла, Контекст) Экспорт
	
	Если ФайлПомещен Тогда
		ПомещенныеФайлы = Новый Массив;
		ПомещенныеФайлы.Добавить(Новый ОписаниеПередаваемогоФайла(ВыбранноеИмяФайла, Адрес));
		Если ПомещенныеФайлы = Неопределено
			Или ПомещенныеФайлы.Количество() = 0 Тогда
				ЗаписатьРезультатПодключения(ИмяФайлаРезультата, "Файл не найден");
				Возврат;
			КонецЕсли;
			
		Контекст.Вставить("ПомещенныеФайлы", ПомещенныеФайлы);
		ЗагрузитьРасширениеЗавершение(Контекст);
	
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ЗагрузитьРасширениеЗавершение(Контекст)
		
	Попытка
		ИзменитьРасширенияВызовСервера(Контекст.ПомещенныеФайлы, Контекст.ИдентификаторРасширения);
		ЗаписатьРезультатПодключения(ИмяФайлаРезультата, "0");
	Исключение
		ИнформацияОбОшибке = ИнформацияОбОшибке();
		Результат = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'После добавления, при подготовке расширений к работе, произошла ошибка:
			           |%1'"), КраткоеПредставлениеОшибки(ИнформацияОбОшибке));
		//ПоказатьПредупреждение(, Результат, 3);
		ЗаписатьРезультатПодключения(ИмяФайлаРезультата, Результат);
	КонецПопытки;
		
КонецПроцедуры


&НаСервере
Процедура ПроверитьДоступностьРазделенныхДанных()
	
	Если Не ОбщегоНазначенияПовтИсп.ДоступноИспользованиеРазделенныхДанных() Тогда
		ВызватьИсключение НСтр("ru = 'Расширения недоступны в неразделенном режиме.'");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьПараметрыРаботыРасширений()
	
	Если СтандартныеПодсистемыСервер.УстановленныеРасширенияНедоступны() Тогда
		Возврат;
	КонецЕсли;
	
	УстановленныеРасширения = ПараметрыСеанса.УстановленныеРасширения;
	Попытка
		ОчищаемыеПараметры = Новый Массив;
		ОчищаемыеПараметры.Добавить("АдресСвойствРасширений");
		ОчищаемыеПараметры.Добавить("УстановленныеРасширения");
		ПараметрыСеанса.Очистить(ОчищаемыеПараметры);
		ХранилищеСвойствРасширений = Справочники.ИдентификаторыОбъектовМетаданных.ХранилищеСвойствРасширений();
		ПараметрыВыполнения = Новый Структура;
		ПараметрыВыполнения.Вставить("УстановленныеРасширения", ПараметрыСеанса.УстановленныеРасширения);
		ПараметрыВыполнения.Вставить("ХранилищеСвойствРасширений", ХранилищеСвойствРасширений);
		ПараметрыПроцедуры = Новый Массив;
		ПараметрыПроцедуры.Добавить(ПараметрыВыполнения);
		ФоновоеЗадание = ФоновыеЗадания.Выполнить(
			"СтандартныеПодсистемыСервер.ЗаполнитьВсеПараметрыРаботыРасширенийФоновоеЗадание",
			ПараметрыПроцедуры);
		Попытка
			ФоновоеЗадание.ОжидатьЗавершения();
		Исключение
			ИнформацияОбОшибке = ИнформацияОбОшибке();
		КонецПопытки;
		Отбор = Новый Структура("УникальныйИдентификатор", ФоновоеЗадание.УникальныйИдентификатор);
		ФоновоеЗадание = ФоновыеЗадания.ПолучитьФоновыеЗадания(Отбор)[0];
		Если ИнформацияОбОшибке <> Неопределено Тогда
			ИнформацияОбОшибке = ФоновоеЗадание.ИнформацияОбОшибке;
		КонецЕсли;
	Исключение
		ИнформацияОбОшибке = ИнформацияОбОшибке();
	КонецПопытки;
	
	ПараметрыСеанса.УстановленныеРасширения = УстановленныеРасширения;
	ОчищаемыеПараметры = Новый Массив;
	ОчищаемыеПараметры.Добавить("АдресСвойствРасширений");
	ПараметрыСеанса.Очистить(ОчищаемыеПараметры);
	
	Если ИнформацияОбОшибке <> Неопределено Тогда
		ВызватьИсключение ПодробноеПредставлениеОшибки(ИнформацияОбОшибке);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция НайтиРасширение(ИдентификаторРасширения)
	
	Отбор = Новый Структура;
	Отбор.Вставить("УникальныйИдентификатор", Новый УникальныйИдентификатор(ИдентификаторРасширения));
	Расширения = РасширенияКонфигурации.Получить(Отбор);
	
	Расширение = Неопределено;
	
	Если Расширения.Количество() = 1 Тогда
		Расширение = Расширения[0];
	КонецЕсли;
	
	Возврат Расширение;
	
КонецФункции


&НаСервере
Процедура ИзменитьРасширенияНаСервере(ПомещенныеФайлы, ИдентификаторРасширения = Неопределено)
	
	ПроверитьДоступностьРазделенныхДанных();
	
	РасширенияИзменены = Ложь;
	Расширение = Неопределено;
	
	

	Если ИдентификаторРасширения <> Неопределено Тогда
		Расширение = НайтиРасширение(ИдентификаторРасширения);
		Если Расширение = Неопределено Тогда
			ВызватьИсключение СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
                НСтр("ru='Не удалось найти расширение с идентификатором ""%1"".'", "ru")
                ,Строка(ИдентификаторРасширения));
		КонецЕсли;
		ПрежнееИмяРасширения = Расширение.Имя;
		ДанныеРасширения = Расширение.ПолучитьДанные();
	КонецЕсли;
	
	ДобавленныеРасширения = Новый Массив;
	
	НачатьТранзакцию();
	Попытка
		Если ИдентификаторРасширения <> Неопределено Тогда
			Расширение.Записать(ПолучитьИзВременногоХранилища(ПомещенныеФайлы[0].Хранение));
			Если ПрежнееИмяРасширения <> Расширение.Имя Тогда
				ВызватьИсключение СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Нельзя загрузить расширение ""%1"" в ""%2"".'"),
					Расширение.Имя,
					ПрежнееИмяРасширения);
			КонецЕсли;
		Иначе
			Для Каждого ПомещенныйФайл Из ПомещенныеФайлы Цикл
				Расширение = РасширенияКонфигурации.Создать();
                Расширение.БезопасныйРежим = Ложь;
                ОтключитьПредупрежденияБезопасности(Расширение);
				Расширение.Записать(ПолучитьИзВременногоХранилища(ПомещенныйФайл.Хранение));
				ДобавленныеРасширения.Вставить(0, Расширение);
			КонецЦикла;
		КонецЕсли;
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;
	КонецПопытки;
	
	Попытка
		ОбновитьПараметрыРаботыРасширений();
		РасширенияИзменены = Истина;
	Исключение
		ИнформацияОбОшибке = ИнформацияОбОшибке();
		Если ИдентификаторРасширения <> Неопределено Тогда
			Расширение.Записать(ДанныеРасширения);
		Иначе
			НачатьТранзакцию();
			Попытка
				Для Каждого ДобавленноеРасширение Из ДобавленныеРасширения Цикл
					Отбор = Новый Структура("Имя", ДобавленноеРасширение.Имя);
					Расширения = РасширенияКонфигурации.Получить(Отбор);
					Для Каждого Расширение Из Расширения Цикл
						Если Расширение.ХешСумма = ДобавленноеРасширение.ХешСумма Тогда
							Расширение.Удалить();
						КонецЕсли;
					КонецЦикла;
				КонецЦикла;
				ЗафиксироватьТранзакцию();
			Исключение
				ТекущаяИнформацияОбОшибке = ИнформацияОбОшибке();
				ОтменитьТранзакцию();
				Если ИдентификаторРасширения <> Неопределено Тогда
					ВызватьИсключение КраткоеПредставлениеОшибки(ИнформацияОбОшибке) + Символы.ПС + Символы.ПС + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru = 'При попытке восстановить измененное расширение произошла еще одна ошибка:
						           |%1'"), КраткоеПредставлениеОшибки(ТекущаяИнформацияОбОшибке));
				Иначе
					ВызватьИсключение КраткоеПредставлениеОшибки(ИнформацияОбОшибке) + Символы.ПС + Символы.ПС + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru = 'При попытке удалить добавленные расширения произошла еще одна ошибка:
						           |%1'"), КраткоеПредставлениеОшибки(ТекущаяИнформацияОбОшибке));
				КонецЕсли;
			КонецПопытки;
		КонецЕсли;
		ВызватьИсключение КраткоеПредставлениеОшибки(ИнформацияОбОшибке) + Символы.ПС + Символы.ПС
			+ НСтр("ru = 'Добавленные расширения были удалены.'");
	КонецПопытки;
	
	
КонецПроцедуры

&НаСервере
Процедура ОтключитьПредупрежденияБезопасности(Расширение)
	
	Если ОбщегоНазначения.ЕстьЗащитаОтОпасныхДействий() Тогда
		Расширение.ЗащитаОтОпасныхДействий = ОбщегоНазначения.ОписаниеЗащитыБезПредупреждений();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте 
Процедура ПроверитьНеобходимостьЗавершенияПрограммы()
	Перем НеобходимоОжидание, МожноЗавершатьРаботу;
	
	НеобходимоОжидание = (Найти(ПараметрЗапуска, "ЗавершитьРаботуСистемы") > 0);
	МожноЗавершатьРаботу = Ложь;
	//СтрокаОшибкиОбновления = Нрег("Не выполнены дополнительные процедуры обработки данных");
	СтрокаНеудачиОбновления = Нрег("Не удалось выполнить обновление");
	
	ФормаОбновленияНайденна = Ложь;
	РезультатОбновленияНайден = Ложь;
	
	Окна = ПолучитьОкна();
	Для каждого Окн Из Окна Цикл
		Если ТипЗнч(Окн) = Тип("ОкноКлиентскогоПриложения") Тогда
			
			Содержимое = Окн.ПолучитьСодержимое();
			Если Найти(НРег(Строка(Окн.Заголовок)), "обновление версии")>0 Тогда
				СчетчикОжиданияРезультатов = 1;
				ПроцентВыполнения = 0;
				Попытка
					Если ТипЗнч(Содержимое) = Тип("УправляемаяФорма") Тогда
						ПроцентВыполнения = Содержимое.ПрогрессВыполнения;
					КонецЕсли; 
				Исключение
				    Сообщить(ОписаниеОшибки());
				КонецПопытки; 
				СтрокаСообщения = ""+ТекущаяДата() + " - " + ПроцентВыполнения + "% Нашли форму обновления подождем еще";
				Сообщить(СтрокаСообщения);
				
			КонецЕсли;
			
			Если СчетчикОжиданияРезультатов > 0 И Найти(НРег(Строка(Окн.Заголовок)), "что нового в конфигурации")>0 Тогда
				СчетчикОжиданияРезультатов = МаксИтерацийОжиданияРезультатов + 1;
				Сообщить(""+ТекущаяДата() + " - Удачное завершение обновления");
				МожноЗавершатьРаботу = Истина;
				Прервать;
			КонецЕсли;
			
			//Если (Найти(НРег(Строка(Окн.Заголовок)), СтрокаОшибкиОбновления)>0 
				//	ИЛИ 
				Если Найти(НРег(Строка(Окн.Заголовок)), СтрокаНеудачиОбновления)>0 Тогда 
			    СчетчикОжиданияРезультатов = МаксИтерацийОжиданияРезультатов + 1;
				МожноЗавершатьРаботу = Истина;
				
				Сообщить("ERROR: "+ТекущаяДата() + "Неудачное обновление конфигурации");
				Прервать;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если НеобходимоОжидание И МожноЗавершатьРаботу = Ложь И СчетчикОжиданияРезультатов <= МаксИтерацийОжиданияРезультатов Тогда
		СчетчикОжиданияРезультатов = СчетчикОжиданияРезультатов + 1;
		ПодключитьОбработчикОжидания("ПроверитьНеобходимостьЗавершенияПрограммы", 10, Истина);
	КонецЕсли; 
			
	
	Если СчетчикОжиданияРезультатов > МаксИтерацийОжиданияРезультатов И НеобходимоОжидание = Истина Тогда
		Сообщить(""+ТекущаяДата() + " - "+"Завершаем работу");
		
		Если Не Содержимое = Неопределено И ТипЗнч(Содержимое) = Тип("УправляемаяФорма") Тогда
			Содержимое.Закрыть();
		КонецЕсли;
		
		ЗавершитьРаботуСистемы(Истина);
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура ИзменитьРасширенияВызовСервера(ПомещенныеФайлы, ИдентификаторРасширения, НеподключенныеРасширения = Неопределено)
    
    // В версии БСП 2.4 изменен механизм работы с расширениями. Эта процедура добавлена для разделения по версиям БСП
    ВерсияБСП = СтандартныеПодсистемыСервер.ВерсияБиблиотеки();
    Если ОбщегоНазначенияКлиентСервер.СравнитьВерсии(ВерсияБСП, "2.4.0.0") >= 0 Тогда
        // Обработчик для версии БСП 2.4.*
        ИзменитьРасширенияНаСервере_БСП_2_4(ПомещенныеФайлы, ИдентификаторРасширения, НеподключенныеРасширения);
    Иначе
        // Обработчик для прежней версии БСП
        ИзменитьРасширенияНаСервере(ПомещенныеФайлы, ИдентификаторРасширения);
    КонецЕсли; 
    
КонецПроцедуры

&НаСервере
Процедура ИзменитьРасширенияНаСервере_БСП_2_4(ПомещенныеФайлы, ИдентификаторРасширения, НеподключенныеРасширения)
	
	ПроверитьДоступностьРазделенныхДанных();
	
	РасширенияИзменены = Ложь;
	Расширение = Неопределено;
	
	Если ИдентификаторРасширения <> Неопределено Тогда
		Расширение = НайтиРасширение(ИдентификаторРасширения);
		Если Расширение = Неопределено Тогда
			ВызватьИсключение СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
                НСтр("ru='Не удалось найти расширение с идентификатором ""%1"".'", "ru")
                ,Строка(ИдентификаторРасширения));
		КонецЕсли;
		ПрежнееИмяРасширения = Расширение.Имя;
		ДанныеРасширения = Расширение.ПолучитьДанные();
	КонецЕсли;
	
	ПроверяемыеРасширения = Новый Соответствие;
	ДобавленныеРасширения = Новый Массив;
	
	НачатьТранзакцию();
	Попытка
		Если ИдентификаторРасширения <> Неопределено Тогда
            ОтключитьПредупрежденияБезопасности(Расширение);
			Расширение.Записать(ПолучитьИзВременногоХранилища(ПомещенныеФайлы[0].Хранение));
			Если ПрежнееИмяРасширения <> Расширение.Имя Тогда
				ВызватьИсключение СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Нельзя загрузить расширение ""%1"" в ""%2"".'"),
					Расширение.Имя,
					ПрежнееИмяРасширения);
			КонецЕсли;
			ПроверяемыеРасширения.Вставить(Расширение.Имя, Расширение.Синоним);
		Иначе
			Для Каждого ПомещенныйФайл Из ПомещенныеФайлы Цикл
				Расширение = РасширенияКонфигурации.Создать();
                Расширение.БезопасныйРежим = Ложь;
				ОтключитьПредупрежденияБезопасности(Расширение);
				Расширение.Записать(ПолучитьИзВременногоХранилища(ПомещенныйФайл.Хранение));
				ДобавленныеРасширения.Вставить(0, Расширение);
				ПроверяемыеРасширения.Вставить(Расширение.Имя, Расширение.Синоним);
			КонецЦикла;
		КонецЕсли;
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;
	КонецПопытки;
	
	ТекстОшибки = "";
	Попытка
		ОбновитьПараметрыРаботыРасширений_БСП_2_4(ПроверяемыеРасширения, НеподключенныеРасширения);
		РасширенияИзменены = Истина;
	Исключение
		ИнформацияОбОшибке = ИнформацияОбОшибке();
		Если ИдентификаторРасширения <> Неопределено Тогда
			Расширение.Записать(ДанныеРасширения);
		Иначе
			НачатьТранзакцию();
			Попытка
				Для Каждого ДобавленноеРасширение Из ДобавленныеРасширения Цикл
					Отбор = Новый Структура("Имя", ДобавленноеРасширение.Имя);
					Расширения = РасширенияКонфигурации.Получить(Отбор);
					Для Каждого Расширение Из Расширения Цикл
						Если Расширение.ХешСумма = ДобавленноеРасширение.ХешСумма Тогда
							Расширение.Удалить();
						КонецЕсли;
					КонецЦикла;
				КонецЦикла;
				ЗафиксироватьТранзакцию();
			Исключение
				ОтменитьТранзакцию();
				ТекущаяИнформацияОбОшибке = ИнформацияОбОшибке();
				Если ИдентификаторРасширения <> Неопределено Тогда
					ВызватьИсключение КраткоеПредставлениеОшибки(ИнформацияОбОшибке) + Символы.ПС + Символы.ПС + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru = 'При попытке восстановить измененное расширение произошла еще одна ошибка:
						           |%1'"), КраткоеПредставлениеОшибки(ТекущаяИнформацияОбОшибке));
				Иначе
					ВызватьИсключение КраткоеПредставлениеОшибки(ИнформацияОбОшибке) + Символы.ПС + Символы.ПС + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru = 'При попытке удалить добавленные расширения произошла еще одна ошибка:
						           |%1'"), КраткоеПредставлениеОшибки(ТекущаяИнформацияОбОшибке));
				КонецЕсли;
			КонецПопытки;
		КонецЕсли;
		ВызватьИсключение КраткоеПредставлениеОшибки(ИнформацияОбОшибке) + Символы.ПС + Символы.ПС
			+ НСтр("ru = 'Добавленные расширения были удалены.'");
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьПараметрыРаботыРасширений_БСП_2_4(ПроверяемыеРасширения = Неопределено, НеподключенныеРасширения = "")
	
	ПараметрыВыполнения = Новый Структура;
	ПараметрыВыполнения.Вставить("ИмяКонфигурации",         Метаданные.Имя);
	ПараметрыВыполнения.Вставить("ВерсияКонфигурации",      Метаданные.Версия);
	ПараметрыВыполнения.Вставить("УстановленныеРасширения", Справочники.ВерсииРасширений.КонтрольныеСуммыРасширений());
	ПараметрыВыполнения.Вставить("ПроверяемыеРасширения",   ПроверяемыеРасширения);
	ПараметрыВыполнения.Вставить("АдресРезультата",         ПоместитьВоВременноеХранилище(, УникальныйИдентификатор));
	ПараметрыПроцедуры = Новый Массив;
	ПараметрыПроцедуры.Добавить(ПараметрыВыполнения);
	
	ФоновоеЗадание = РасширенияКонфигурации.ВыполнитьФоновоеЗаданиеСРасширениямиБазыДанных(
		"СтандартныеПодсистемыСервер.ЗаполнитьВсеПараметрыРаботыРасширенийФоновоеЗадание", ПараметрыПроцедуры);
	ФоновоеЗадание.ОжидатьЗавершения();
	Отбор = Новый Структура("УникальныйИдентификатор", ФоновоеЗадание.УникальныйИдентификатор);
	ФоновоеЗадание = ФоновыеЗадания.ПолучитьФоновыеЗадания(Отбор)[0];
	Если ФоновоеЗадание.ИнформацияОбОшибке <> Неопределено Тогда
		ВызватьИсключение ПодробноеПредставлениеОшибки(ФоновоеЗадание.ИнформацияОбОшибке);
	КонецЕсли;
	
	Результат = ПолучитьИзВременногоХранилища(ПараметрыВыполнения.АдресРезультата);
	Если ТипЗнч(Результат) <> Тип("Структура") Тогда
		ВызватьИсключение НСтр("ru = 'Фоновое задание подготовки расширений не вернуло результат.'");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Результат.ТекстОшибки) Тогда
		ВызватьИсключение Результат.ТекстОшибки;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Результат.НеподключенныеРасширения) Тогда
		НеподключенныеРасширения = Результат.НеподключенныеРасширения;
	КонецЕсли;
	
КонецПроцедуры
 
СчетчикОжиданияРезультатов = 0;
МаксИтерацийОжиданияРезультатов = 5;
