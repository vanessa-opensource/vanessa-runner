&НаКлиенте
Перем СчетчикОжиданияРезультатов;

&НаКлиенте
Перем МаксИтерацийОжиданияРезультатов;

&НаКлиенте
Перем ИндикаторВыполнения;

&НаКлиенте
Перем ФормаОбновленияНайденаОдинРаз;

&НаКлиенте
Перем ФормаНачальногоЗаполненияНайденаОдинРаз;

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	ОшибкаОбновления = Ложь;
	
	Попытка
		Выполнить("ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(""ОбщиеНастройкиПользователя"", 
			|""ЗапрашиватьПодтверждениеПриЗавершенииПрограммы"", Ложь);");
	Исключение
		// Данного модуля и метода может не быть в конфигурации
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если Не ЭтоКонфигурацияНаБазеБСПСервер() Тогда
		ПрекратитьРаботуСистемы();
		//Сообщить("Заглушка - завершаем работу системы");
		Возврат;
	КонецЕсли;
	
	ПараметрыЗапуска = СтрРазделить(ПараметрЗапуска, ";", Ложь);
	СтрокаПоиска = "exitCodePath=";
	Для каждого Стр из ПараметрыЗапуска Цикл
		Если СтрНайти(Стр, СтрокаПоиска) > 0 Тогда
			ПутьКФайлуРезультата = СтрЗаменить(Стр, СтрокаПоиска, "");
			Сообщить("Путь файла лога " + ПутьКФайлуРезультата);
			УдалитьФайлРезультата();
			Прервать;
		КонецЕсли;	
	КонецЦикла;	 	
	
	ПодключитьОбработчикОжидания("ПроверитьНеобходимостьЗавершенияПрограммы", 10, Истина);
	ПодключитьОбработчикОжидания("ПроверитьЛегальностьОбновления", 2);
	Если СуществуетПодсистемаМультиязычность() Тогда
		ПодключитьОбработчикОжидания("ПроверитьРегиональныеНастройки", 2);
	    ПроверитьРегиональныеНастройки();
	КонецЕсли;	
	ПроверитьНеобходимостьЗавершенияПрограммы();
	ПроверитьЛегальностьОбновления();
КонецПроцедуры

&НаКлиенте 
Процедура ПроверитьНеобходимостьЗавершенияПрограммы() Экспорт
	
	НеобходимоОжидание = Найти(ПараметрЗапуска, "ЗавершитьРаботуСистемы") > 0;
	МожноЗавершатьРаботу = Ложь;
	СтрокаНеудачиОбновления = Нрег(НСтр("ru='Не удалось выполнить обновлени';uk='Не вдалося виконати оновленн'"));
	
	СтрокаНачальноеЗаполнение = НСтр("ru='начальное заполнение';uk='початкове заповнення'");
	СтрокаПереходСДругойПрограммы = НСтр("ru='переход';uk='переход'");
	СтрокаНевыполненыДополнительныеПроцедуры = НСтр("ru='не выполнены дополнительные процедуры'");
	СтрокаОбновлениеВерсии = НСтр("ru='обновление версии';uk='оновлення версії'" );
	СтрокаЧтоНового = НРег(НСтр("ru='Что нового в конфигурации';uk='Що нового в конфігурації'"));

	ФормаОбновленияНайдена = Ложь;
	ФормаНачальногоЗаполненияНайдена = Ложь;
	
	Окна = ПолучитьОкна();
	Для каждого Окн Из Окна Цикл
		Если ТипЗнч(Окн) = Тип("ОкноКлиентскогоПриложения") Тогда
			
			Содержимое = Окн.ПолучитьСодержимое();
			ЗаголовокНРег = НРег(Строка(Окн.Заголовок));
			
			ОбновитьПрогресс = Ложь;
			Если Найти(ЗаголовокНРег, СтрокаОбновлениеВерсии) > 0 Тогда
				ФормаОбновленияНайденаОдинРаз = Истина;
				ФормаОбновленияНайдена = Истина;
				ОбновитьПрогресс = Истина;
				
			ИначеЕсли Найти(ЗаголовокНРег, СтрокаНачальноеЗаполнение) > 0 Тогда

				ФормаНачальногоЗаполненияНайденаОдинРаз = Истина;
				ФормаНачальногоЗаполненияНайдена = Истина;
				ОбновитьПрогресс = Истина;
			ИначеЕсли Найти(ЗаголовокНРег, СтрокаПереходСДругойПрограммы) > 0 Тогда

				ФормаНачальногоЗаполненияНайденаОдинРаз = Истина;
				ФормаНачальногоЗаполненияНайдена = Истина;
				ОбновитьПрогресс = Истина;
			ИначеЕсли Найти(ЗаголовокНРег, СтрокаНевыполненыДополнительныеПроцедуры) > 0 Тогда
				
				ФормаОбновленияНайдена = Истина;
				
			КонецЕсли;
			
			Если ОбновитьПрогресс Тогда
				
				СчетчикОжиданияРезультатов = 1;
				ОбновитьПрогресс(Содержимое, ИндикаторВыполнения);
				
			КонецЕсли;
			
			Если Найти(ЗаголовокНРег, СтрокаНевыполненыДополнительныеПроцедуры)>0 Тогда 
				Если Не Содержимое = Неопределено И ТипЗнч(Содержимое) = Тип("УправляемаяФорма") Тогда
					Содержимое.Закрыть(Истина);
					МожемЗавершатьРаботу = Ложь;
					Прервать;
				КонецЕсли;
			КонецЕсли;
			
			Если СчетчикОжиданияРезультатов > 0 И Найти(ЗаголовокНРег, СтрокаЧтоНового)>0 Тогда
				СчетчикОжиданияРезультатов = МаксИтерацийОжиданияРезультатов + 1;
				Сообщить(""+ТекущаяДата() + " - Удачное завершение обновления");
				Прервать;
			КонецЕсли;
			
			Если Найти(ЗаголовокНРег, СтрокаНеудачиОбновления)>0 Тогда 
			    СчетчикОжиданияРезультатов = МаксИтерацийОжиданияРезультатов + 1;
				МожноЗавершатьРаботу = Истина;
				ОшибкаОбновления = Истина;
				
				Попытка
					Если ТипЗнч(Содержимое) = Тип("УправляемаяФорма") Тогда
						ТекстОшибки = Содержимое.Элементы.ТекстСообщенияОбОшибке.Заголовок;
						Сообщить("ERROR: "+ТекущаяДата() + " "+ТекстОшибки);
					КонецЕсли; 
					
				Исключение
				 	Сообщить("ERROR: "+ТекущаяДата() + ОписаниеОшибки());   
				КонецПопытки; 
				
				Сообщить("ERROR: "+ТекущаяДата() + "Неудачное обновление конфигурации");
				Если Не Содержимое = Неопределено И ТипЗнч(Содержимое) = Тип("УправляемаяФорма") Тогда
					Содержимое.Закрыть();
				КонецЕсли;
				
				Прервать;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если НеобходимоОжидание И Не МожноЗавершатьРаботу И СчетчикОжиданияРезультатов <= МаксИтерацийОжиданияРезультатов Тогда
		СчетчикОжиданияРезультатов = СчетчикОжиданияРезультатов + 1;
		ПодключитьОбработчикОжидания("ПроверитьНеобходимостьЗавершенияПрограммы", 10, Истина);
	КонецЕсли; 
	
	МожемЗавершатьРаботу = Ложь;
	Если Не ФормаОбновленияНайдена И ФормаОбновленияНайденаОдинРаз Тогда
		МожемЗавершатьРаботу = Истина;
	ИначеЕсли Не ФормаНачальногоЗаполненияНайдена И ФормаНачальногоЗаполненияНайденаОдинРаз Тогда
		МожемЗавершатьРаботу = Истина;
	ИначеЕсли СчетчикОжиданияРезультатов > МаксИтерацийОжиданияРезультатов Тогда
		МожемЗавершатьРаботу = Истина;
	КонецЕсли; 
	
	Если МожемЗавершатьРаботу И НеобходимоОжидание Тогда
		Сообщить(""+ТекущаяДата() + " - "+"Завершаем работу");
		
		ПодключитьОбработчикОжидания("ЗавершитьРаботу", 1, Истина);

	КонецЕсли; 

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПрогресс(Знач Содержимое, ИндикаторВыполнения)
	ПроцентВыполнения = 0;
	Попытка
		Если ТипЗнч(Содержимое) = Тип("УправляемаяФорма") Тогда
			ПроцентВыполнения = Содержимое.ПрогрессВыполнения;
		КонецЕсли; 
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки; 
	
	Если ПроцентВыполнения <> ИндикаторВыполнения Тогда
		ИндикаторВыполнения = ПроцентВыполнения;
		СтрокаСообщения = ""+ТекущаяДата() + " - " + ПроцентВыполнения + "% Нашли форму обновления подождем еще";
		Сообщить(СтрокаСообщения);
	КонецЕсли; 
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаписатьПодтверждениеЛегальностиПолученияОбновлений()
	
	УстановитьПривилегированныйРежим(Истина);
	Выполнить("ОбновлениеИнформационнойБазыСлужебный.ЗаписатьПодтверждениеЛегальностиПолученияОбновлений();");
		
КонецПроцедуры
 
&НаКлиенте 
Процедура ПроверитьЛегальностьОбновления() Экспорт
	СтрокаЛегальност = НРег(НСтр("ru='легальност';uk='легальніст'"));

	Окна = ПолучитьОкна();
	Для каждого Окн Из Окна Цикл
		Если ТипЗнч(Окн) = Тип("ОкноКлиентскогоПриложения") Тогда
			Содержимое = Окн.ПолучитьСодержимое();
			Если Найти(НРег(Строка(Окн.Заголовок)), СтрокаЛегальност) > 0 Тогда
				Попытка
					Если ТипЗнч(Содержимое) = Тип("УправляемаяФорма") Тогда
						Содержимое.Результат = Истина;  
						Содержимое.Закрыть(Истина);
						ЗаписатьПодтверждениеЛегальностиПолученияОбновлений();
						СчетчикОжиданияРезультатов = 0;
					КонецЕсли; 
				Исключение
				    Сообщить(ОписаниеОшибки());
				КонецПопытки;
				
				ОтключитьОбработчикОжидания("ПроверитьЛегальностьОбновления");
				
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
				
КонецПроцедуры
	
&НаКлиенте
Процедура ЗавершитьРаботу() Экспорт 
	Если Не ОшибкаОбновления Тогда
		ЗаписатьФайлРезультата();
	КонецЕсли;
	ПрекратитьРаботуСистемы();
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЭтоКонфигурацияНаБазеБСПСервер()
	Рез = Ложь;
	Описание = Новый Структура;
	Попытка
		Выполнить("ОбновлениеИнформационнойБазыБСП.ПриДобавленииПодсистемы(Описание);");
		Рез = Описание.Имя = "СтандартныеПодсистемы";
	Исключение
		ИнфоОшибки = ИнформацияОбОшибке();
		Рез = НРег(ИнфоОшибки.ИмяМодуля) = НРег("ОбщийМодуль.ОбновлениеИнформационнойБазыБСП.Модуль");
	КонецПопытки;
	Возврат Рез;
КонецФункции

&НаКлиенте
Процедура ЗаписатьФайлРезультата()
	
	Если ПутьКФайлуРезультата = "" Тогда
		Возврат;
	КонецЕсли; 
	
	ТекстовыйФайл = Новый ТекстовыйДокумент;
	ТекстовыйФайл.УстановитьТекст("0");
	ТекстовыйФайл.Записать(ПутьКФайлуРезультата, КодировкаТекста.UTF8); 

КонецПроцедуры

&НаКлиенте
Процедура УдалитьФайлРезультата()
	
	Если ПутьКФайлуРезультата = "" Тогда
		Возврат;
	КонецЕсли; 
	
	Попытка
		УдалитьФайлы(ПутьКФайлуРезультата);
	Исключение
		ТекстСообщения = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ЗаписатьВЖурналРегистрации(ТекстСообщения);
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте 
Процедура ПроверитьРегиональныеНастройки() Экспорт
	СтрокаРегиональныеНастройки = НРег(НСтр("ru='Региональные настройки'"));

	Окна = ПолучитьОкна();
	Для каждого Окн Из Окна Цикл
		Если ТипЗнч(Окн) = Тип("ОкноКлиентскогоПриложения") Тогда
			Содержимое = Окн.ПолучитьСодержимое();
			Если Найти(НРег(Строка(Окн.Заголовок)), СтрокаРегиональныеНастройки) > 0 Тогда
				Попытка
					Если ТипЗнч(Содержимое) = Тип("УправляемаяФорма") Тогда  
						Содержимое.Закрыть(Новый Структура("Отказ", Ложь));;
						СчетчикОжиданияРезультатов = 0;
					КонецЕсли; 
				Исключение
				    Сообщить(ОписаниеОшибки());
				КонецПопытки;
				
				ОтключитьОбработчикОжидания("ПроверитьРегиональныеНастройки");
				
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
				
КонецПроцедуры

&НаКлиенте
Функция СуществуетПодсистемаМультиязычность()
	Рез = Ложь;
	Попытка
		Выполнить("Рез = ОбщегоНазначенияКлиент.ПодсистемаСуществует(""СтандартныеПодсистемы.Мультиязычность"");");
	Исключение
	КонецПопытки;
	Возврат Рез;
КонецФункции

&НаСервереБезКонтекста
Процедура ЗаписатьВЖурналРегистрации(Комментарий);
	ЗаписьЖурналаРегистрации(КлючЖР(), УровеньЖурналаРегистрации.Ошибка, Неопределено, Неопределено, Комментарий);
КонецПроцедуры

&НаСервереБезКонтекста
Функция КлючЖР() 
	Возврат "VanessaRunner.ЗакрытьПредприятие";	
КонецФункции

СчетчикОжиданияРезультатов = 0;
МаксИтерацийОжиданияРезультатов = 5;
ИндикаторВыполнения = 0;
ФормаОбновленияНайденаОдинРаз = Ложь;
ФормаНачальногоЗаполненияНайденаОдинРаз = Ложь;
